{"ast":null,"code":"var _jsxFileName = \"/Users/martapbasto/Documents/Education/WebDev/final-project/smart_brain/src/App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Particles from \"react-tsparticles\";\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '5f7ea282d7044a3eb4fae4e9038762c3'\n});\nconst particlesOptions = {\n  fps_limit: 60,\n  interactivity: {\n    detect_on: \"canvas\",\n    events: {\n      onclick: {\n        enable: true,\n        mode: \"repulse\"\n      },\n      onhover: {\n        enable: true,\n        mode: \"bubble\",\n        parallax: {\n          enable: false,\n          force: 2,\n          smooth: 10\n        }\n      },\n      resize: true\n    },\n    modes: {\n      bubble: {\n        distance: 250,\n        duration: 2,\n        opacity: 0,\n        size: 0,\n        speed: 3\n      },\n      grab: {\n        distance: 400,\n        line_linked: {\n          opacity: 1\n        }\n      },\n      push: {\n        particles_nb: 4\n      },\n      remove: {\n        particles_nb: 2\n      },\n      repulse: {\n        distance: 400,\n        duration: 0.4\n      }\n    }\n  },\n  particles: {\n    color: {\n      value: \"#ffffff\"\n    },\n    line_linked: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: false,\n      opacity: 0.4,\n      width: 1\n    },\n    move: {\n      size: true,\n      attract: {\n        enable: false,\n        rotateX: 600,\n        rotateY: 600\n      },\n      bounce: false,\n      direction: \"none\",\n      enable: true,\n      out_mode: \"out\",\n      random: true,\n      speed: 0.3,\n      straight: false\n    },\n    number: {\n      density: {\n        enable: true,\n        value_area: 800\n      },\n      value: 160\n    },\n    opacity: {\n      anim: {\n        enable: true,\n        opacity_min: 0,\n        speed: 1,\n        sync: false\n      },\n      random: true,\n      value: 1\n    },\n    shape: {\n      character: {\n        fill: false,\n        font: \"Verdana\",\n        style: \"\",\n        value: \"*\",\n        weight: \"400\"\n      },\n      image: {\n        height: 100,\n        replace_color: true,\n        src: \"images/github.svg\",\n        width: 100\n      },\n      polygon: {\n        nb_sides: 5\n      },\n      stroke: {\n        color: \"#000000\",\n        width: 0\n      },\n      type: \"circle\"\n    },\n    size: {\n      anim: {\n        enable: false,\n        size_min: 0.3,\n        speed: 4,\n        sync: false\n      },\n      random: true,\n      value: 3\n    }\n  },\n  polygon: {\n    draw: {\n      enable: false,\n      lineColor: \"#ffffff\",\n      lineWidth: 0.5\n    },\n    move: {\n      radius: 10\n    },\n    scale: 1,\n    type: \"none\",\n    url: \"\"\n  },\n  retina_detect: true\n};\nconst initialState = {\n  input: '',\n  image_url: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calcFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('input_img');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onBtnSubmit = () => {\n      this.setState({\n        image_url: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calcFaceLocation(response));\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      image_url,\n      route,\n      box\n    } = this.state;\n\n    const particlesInit = main => {\n      console.log(main);\n    };\n\n    const particlesLoaded = container => {\n      console.log(container);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      init: particlesInit,\n      loaded: particlesLoaded,\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onBtnSubmit: this.onBtnSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      image_url: image_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/martapbasto/Documents/Education/WebDev/final-project/smart_brain/src/App.js"],"names":["React","Component","Clarifai","Particles","Navigation","SignIn","Register","Logo","ImageLinkForm","FaceRecognition","Rank","app","App","apiKey","particlesOptions","fps_limit","interactivity","detect_on","events","onclick","enable","mode","onhover","parallax","force","smooth","resize","modes","bubble","distance","duration","opacity","size","speed","grab","line_linked","push","particles_nb","remove","repulse","particles","color","value","width","move","attract","rotateX","rotateY","bounce","direction","out_mode","random","straight","number","density","value_area","anim","opacity_min","sync","shape","character","fill","font","style","weight","image","height","replace_color","src","polygon","nb_sides","stroke","type","size_min","draw","lineColor","lineWidth","radius","scale","url","retina_detect","initialState","input","image_url","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calcFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","document","getElementById","Number","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onBtnSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","onRouteChange","render","particlesInit","main","console","log","particlesLoaded","container"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Particles from \"react-tsparticles\";\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\n\nconst app = new Clarifai.App({\n  apiKey: '5f7ea282d7044a3eb4fae4e9038762c3'\n});\n\nconst particlesOptions = {\n  fps_limit: 60,\n  interactivity: {\n    detect_on: \"canvas\",\n    events: {\n      onclick: { enable: true, mode: \"repulse\" },\n      onhover: {\n        enable: true,\n        mode: \"bubble\",\n        parallax: { enable: false, force: 2, smooth: 10 }\n      },\n      resize: true\n    },\n    modes: {\n      bubble: { distance: 250, duration: 2, opacity: 0, size: 0, speed: 3 },\n      grab: { distance: 400, line_linked: { opacity: 1 } },\n      push: { particles_nb: 4 },\n      remove: { particles_nb: 2 },\n      repulse: { distance: 400, duration: 0.4 }\n    }\n  },\n  particles: {\n    color: { value: \"#ffffff\" },\n    line_linked: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: false,\n      opacity: 0.4,\n      width: 1\n    },\n    move: {\n      size: true,\n      attract: { enable: false, rotateX: 600, rotateY: 600 },\n      bounce: false,\n      direction: \"none\",\n      enable: true,\n      out_mode: \"out\",\n      random: true,\n      speed: 0.3,\n      straight: false\n    },\n    number: { density: { enable: true, value_area: 800 }, value: 160 },\n    opacity: {\n      anim: { enable: true, opacity_min: 0, speed: 1, sync: false },\n      random: true,\n      value: 1\n    },\n    shape: {\n      character: {\n        fill: false,\n        font: \"Verdana\",\n        style: \"\",\n        value: \"*\",\n        weight: \"400\"\n      },\n      image: {\n        height: 100,\n        replace_color: true,\n        src: \"images/github.svg\",\n        width: 100\n      },\n      polygon: { nb_sides: 5 },\n      stroke: { color: \"#000000\", width: 0 },\n      type: \"circle\"\n    },\n    size: {\n      anim: { enable: false, size_min: 0.3, speed: 4, sync: false },\n      random: true,\n      value: 3\n    }\n  },\n  polygon: {\n    draw: { enable: false, lineColor: \"#ffffff\", lineWidth: 0.5 },\n    move: { radius: 10 },\n    scale: 1,\n    type: \"none\",\n    url: \"\"\n  },\n  retina_detect: true\n}\n\nconst initialState = {\n  input: '',\n  image_url: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n\n  calcFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('input_img');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  onBtnSubmit = () => {\n    this.setState({ image_url: this.state.input });\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }))\n            })\n        }\n        this.displayFaceBox(this.calcFaceLocation(response))\n      })\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({ isSignedIn: false })\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route });\n  }\n\n  render() {\n    const { isSignedIn, image_url, route, box } = this.state;\n    const particlesInit = (main) => {\n      console.log(main);\n    };\n\n    const particlesLoaded = (container) => {\n      console.log(container);\n    };\n    return (\n      <div className=\"App\" >\n        <Particles className=\"particles\" init={particlesInit}\n          loaded={particlesLoaded}\n          params={particlesOptions} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        {route === 'home'\n          ? <>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onBtnSubmit={this.onBtnSubmit} />\n            <FaceRecognition box={box} image_url={image_url} />\n          </>\n          : (\n            route === 'signin'\n              ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}